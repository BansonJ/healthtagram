services:
  db:
    container_name: healthtagrammysql
    image: mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: healthtagram # 데이터베이스 미리 설치
      # MYSQL_ROOT_HOST: '%' # 외부 접근 허용
      MYSQL_ROOT_PASSWORD: 1234
      TZ: 'Asia/Seoul'
    ports:
      - "3307:3306"
    volumes:
      - ./mysql/conf.d:/etc/mysql/conf.d # MySQL 설정 파일 위치
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_general_ci
    networks:
      - healthtagramnetwork

  healthtagram:
    container_name: healthtagramApp
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - //c/study/healthtagramImage:/tmp/healthtagramImage
    environment:
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/healthtagram?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATA_MONGODB_URI: mongodb://root:root@host.docker.internal:27017/healthtagram?authSource=admin
    depends_on:
      - db
      - es
      - mongodb
    networks:
      - healthtagramnetwork

  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_DATABASE: healthtagram
    ports:
      - "27017:27017"
    volumes:
      - ./data/mongo:/data/db
    networks:
      - healthtagramnetwork

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml  # ./monitoring/prometheus.yml 은 prometheus.yml 파일의 경로 지정
    networks:
      - healthtagramnetwork

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: "$UID:$GID"
    ports:
      - "3001:3001"
    volumes:
      - ./grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - healthtagramnetwork

  es:
    build:
      context: ./elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: healthElastic
    environment:
      - node.name=single-node
      - cluster.name=healthEsCluster
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - xpack.security.transport.ssl.enabled=false
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - healthtagramnetwork

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.13.4
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: http://es:9200
    ports:
      - 5601:5601
    # Elasticsearch Start Dependency
    depends_on:
      - es
    networks:
      - healthtagramnetwork

volumes:
  elasticsearch-data:  # ✅ 볼륨 정의 추가
    driver: local

networks:
  healthtagramnetwork:
    driver: bridge